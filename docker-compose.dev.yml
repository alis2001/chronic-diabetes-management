version: '3.8'

services:
  # ========================================
  # DATABASE SERVICES
  # ========================================
  
  mongodb:
    image: mongo:6.0
    container_name: diabetes-mongodb
    restart: unless-stopped
    ports:
      - "${MONGODB_PORT:-27018}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-admin123}
      MONGO_INITDB_DATABASE: ${MONGO_INITDB_DATABASE:-diabetes_db}
    volumes:
      - mongodb_data:/data/db
    networks:
      - diabetes-network

  redis:
    image: redis:7-alpine
    container_name: diabetes-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6381}:6379"  # Using 6381 to avoid conflict with existing Redis
    command: redis-server --requirepass ${REDIS_PASSWORD:-redis123}
    volumes:
      - redis_data:/data
    networks:
      - diabetes-network

  # ========================================
  # FASTAPI BACKEND SERVICES
  # ========================================

  timeline-service:
    build:
      context: ./services/timeline-service
      dockerfile: Dockerfile.dev
    container_name: diabetes-timeline-service
    restart: unless-stopped
    ports:
      - "${TIMELINE_SERVICE_PORT:-8001}:8001"
    environment:
      - ENV=${ENVIRONMENT:-development}
      - SERVICE_PORT=8001
      - VM_HOST=${VM_HOST:-localhost}
      - MONGODB_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD:-admin123}@mongodb:27017/${MONGO_INITDB_DATABASE:-diabetes_db}?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      - CORS_ORIGINS=${CORS_ORIGINS:-}
    depends_on:
      - mongodb
      - redis
    networks:
      - diabetes-network
    volumes:
      - ./services/timeline-service:/app

  analytics-service:
    build:
      context: ./services/analytics-service
      dockerfile: Dockerfile.dev
    container_name: diabetes-analytics-service
    restart: unless-stopped
    ports:
      - "${ANALYTICS_SERVICE_PORT:-8002}:8002"
    environment:
      - ENV=${ENVIRONMENT:-development}
      - SERVICE_PORT=8002
      - VM_HOST=${VM_HOST:-localhost}
      - MONGODB_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD:-admin123}@mongodb:27017/${MONGO_INITDB_DATABASE:-diabetes_db}?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      - CORS_ORIGINS=${CORS_ORIGINS:-}
      - WIRGILIO_TOKEN=${WIRGILIO_TOKEN}
      - WIRGILIO_BASE_URL=${WIRGILIO_BASE_URL:-https://10.10.13.14}
      - WIRGILIO_VERIFY_SSL=${WIRGILIO_VERIFY_SSL:-true}
      - WIRGILIO_API_PATH=${WIRGILIO_API_PATH:-/cpi/wirgilio-api}
    depends_on:
      - mongodb
      - redis
      - timeline-service
    networks:
      - diabetes-network
    volumes:
      - ./services/analytics-service:/app
      
  admin-dashboard:
    build:
      context: ./services/admin-dashboard
      dockerfile: Dockerfile.dev
    container_name: diabetes-admin-dashboard
    restart: unless-stopped
    ports:
      - "${ADMIN_SERVICE_PORT:-8084}:8084"
    environment:
      - ENV=${ENVIRONMENT:-development}
      - SERVICE_PORT=8084
      - VM_HOST=${VM_HOST:-localhost}
      - MONGODB_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD:-admin123}@mongodb:27017/${MONGO_INITDB_DATABASE:-diabetes_db}?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      - TIMELINE_SERVICE_URL=http://timeline-service:8001
      - ANALYTICS_SERVICE_URL=http://analytics-service:8002
      - SCHEDULER_SERVICE_URL=http://scheduler-service:8003
      - API_GATEWAY_URL=http://api-gateway:8080
      - CORS_ORIGINS=${CORS_ORIGINS:-}
      - SMTP_USERNAME=${SMTP_USERNAME:-alisadeghian7077@gmail.com}
      - SMTP_PASSWORD=${SMTP_PASSWORD:-jfvc swyy szwy pekb}
    depends_on:
      - mongodb
      - redis
      - timeline-service
    networks:
      - diabetes-network
    volumes:
      - ./services/admin-dashboard:/app

  scheduler-service:
    build:
      context: ./services/scheduler-service
      dockerfile: Dockerfile.dev
    container_name: diabetes-scheduler-service
    restart: unless-stopped
    ports:
      - "${SCHEDULER_SERVICE_PORT:-8003}:8003"
    environment:
      - ENV=${ENVIRONMENT:-development}
      - SERVICE_PORT=8003
      - VM_HOST=${VM_HOST:-localhost}
      - MONGODB_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD:-admin123}@mongodb:27017/${MONGO_INITDB_DATABASE:-diabetes_db}?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      - CORS_ORIGINS=${CORS_ORIGINS:-}
    depends_on:
      - mongodb
      - redis
      - timeline-service
    networks:
      - diabetes-network
    volumes:
      - ./services/scheduler-service:/app

  # ========================================
  # API GATEWAY - CENTRAL ENTRY POINT
  # ========================================

  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile.dev
    container_name: diabetes-api-gateway
    restart: unless-stopped
    ports:
      - "${API_GATEWAY_PORT:-8080}:8080"  # ✅ Main entry point for all API requests
    environment:
      - ENV=${ENVIRONMENT:-development}
      - SERVICE_PORT=8080
      - VM_HOST=${VM_HOST:-localhost}
      - TIMELINE_SERVICE_URL=http://timeline-service:8001
      - ANALYTICS_SERVICE_URL=http://analytics-service:8002
      - SCHEDULER_SERVICE_URL=http://scheduler-service:8003
      - ADMIN_SERVICE_URL=http://admin-dashboard:8084
      - CORS_ORIGINS=${CORS_ORIGINS:-}
      - DIARIO_SERVICE_URL=http://diario-service:8005
    depends_on:
      - timeline-service
      - analytics-service
      - scheduler-service
    networks:
      - diabetes-network
    volumes:
      - ./services/api-gateway:/app

  # ========================================
  # REACT FRONTEND SERVICES
  # ========================================

  timeline-frontend:
    build:
      context: ./frontend/timeline-app
      dockerfile: Dockerfile.dev
    container_name: diabetes-timeline-frontend
    restart: unless-stopped
    ports:
      - "${TIMELINE_FRONTEND_PORT:-3010}:3000"  # Timeline frontend port
    environment:
      - REACT_APP_API_GATEWAY_URL=http://${VM_HOST:-localhost}:${API_GATEWAY_PORT:-8080}
      - REACT_APP_TIMELINE_API_URL=http://${VM_HOST:-localhost}:${TIMELINE_SERVICE_PORT:-8001}
      - REACT_APP_ANALYTICS_FRONTEND_PORT=${ANALYTICS_FRONTEND_PORT:-3011}
      - REACT_APP_TIMELINE_FRONTEND_PORT=${TIMELINE_FRONTEND_PORT:-3010}
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - api-gateway  # ✅ Frontend depends on Gateway, not individual services
    networks:
      - diabetes-network
    volumes:
      - ./frontend/timeline-app:/app
      - /app/node_modules

  analytics-frontend:
    build:
      context: ./frontend/analytics-app
      dockerfile: Dockerfile.dev
    container_name: diabetes-analytics-frontend
    restart: unless-stopped
    ports:
      - "${ANALYTICS_FRONTEND_PORT:-3011}:3000"  # Analytics frontend port
    environment:
      # ✅ PRIMARY: Dynamic API Gateway URL based on VM_HOST
      - REACT_APP_API_GATEWAY_URL=http://${VM_HOST:-localhost}:${API_GATEWAY_PORT:-8080}
      # ✅ LEGACY FALLBACK: Direct service access (for development/debugging)
      - REACT_APP_ANALYTICS_API_URL=http://${VM_HOST:-localhost}:${ANALYTICS_SERVICE_PORT:-8002}
      - REACT_APP_TIMELINE_API_URL=http://${VM_HOST:-localhost}:${TIMELINE_SERVICE_PORT:-8001}
      - REACT_APP_ANALYTICS_FRONTEND_PORT=${ANALYTICS_FRONTEND_PORT:-3011}
      - REACT_APP_TIMELINE_FRONTEND_PORT=${TIMELINE_FRONTEND_PORT:-3010}
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - api-gateway  # ✅ Frontend depends on Gateway
    networks:
      - diabetes-network
    volumes:
      - ./frontend/analytics-app:/app
      - /app/node_modules

  admin-frontend:
    build:
      context: ./frontend/admin-app
      dockerfile: Dockerfile.dev
    container_name: diabetes-admin-frontend
    restart: unless-stopped
    ports:
      - "${ADMIN_FRONTEND_PORT:-3012}:3000"  # Admin frontend port
    environment:
      # ✅ PRIMARY: Dynamic API Gateway and Admin URLs
      - REACT_APP_API_GATEWAY_URL=http://${VM_HOST:-localhost}:${API_GATEWAY_PORT:-8080}
      - REACT_APP_ADMIN_API_URL=http://${VM_HOST:-localhost}:${ADMIN_SERVICE_PORT:-8084}
      - CHOKIDAR_USEPOLLING=true
    depends_on:
      - api-gateway
      - admin-dashboard
    networks:
      - diabetes-network
    volumes:
      - ./frontend/admin-app:/app
      - /app/node_modules

  scheduler-frontend:
    build:
      context: ./frontend/scheduler-app
      dockerfile: Dockerfile.dev
    container_name: diabetes-scheduler-frontend
    restart: unless-stopped
    ports:
      - "${SCHEDULER_FRONTEND_PORT:-3013}:3000"
    environment:
      # PRIMARY: API Gateway URL (CRITICAL for scheduler)
      - REACT_APP_API_GATEWAY_URL=http://${VM_HOST:-localhost}:${API_GATEWAY_PORT:-8080}
      
      # FALLBACK: Direct service URLs
      - REACT_APP_SCHEDULER_API_URL=http://${VM_HOST:-localhost}:${SCHEDULER_SERVICE_PORT:-8003}
      - REACT_APP_TIMELINE_API_URL=http://${VM_HOST:-localhost}:${TIMELINE_SERVICE_PORT:-8001}
      
      # Development configuration
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_ENABLE_DEBUG_LOGGING=true
      
      # Iframe integration
      - REACT_APP_IFRAME_MODE=true
      - REACT_APP_PARENT_ORIGIN=http://${VM_HOST:-localhost}:${TIMELINE_FRONTEND_PORT:-3010}
    depends_on:
      - scheduler-service
      - timeline-service
      - api-gateway
    networks:
      - diabetes-network
    volumes:
      - ./frontend/scheduler-app:/app
      - /app/node_modules
  
  diario-service:
    build:
      context: ./services/diario-service
      dockerfile: Dockerfile.dev
    container_name: diabetes-diario-service
    restart: unless-stopped
    ports:
      - "${DIARIO_SERVICE_PORT:-8005}:8005"
    environment:
      - ENV=${ENVIRONMENT:-development}
      - SERVICE_PORT=8005
      - VM_HOST=${VM_HOST:-localhost}
      - MONGODB_URL=mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD:-admin123}@mongodb:27017/${MONGO_INITDB_DATABASE:-diabetes_db}?authSource=admin
      - REDIS_URL=redis://:${REDIS_PASSWORD:-redis123}@redis:6379/0
      - CORS_ORIGINS=${CORS_ORIGINS:-}
      - WIRGILIO_TOKEN=${WIRGILIO_TOKEN}
      - WIRGILIO_BASE_URL=${WIRGILIO_BASE_URL:-https://10.10.13.14}
      - WIRGILIO_VERIFY_SSL=${WIRGILIO_VERIFY_SSL:-true}
      - WIRGILIO_API_PATH=${WIRGILIO_API_PATH:-/cpi/wirgilio-api}
    depends_on:
      - mongodb
      - redis
    networks:
      - diabetes-network
    volumes:
      - ./services/diario-service:/app

  diario-frontend:
    build:
      context: ./frontend/diario-app
      dockerfile: Dockerfile.dev
    container_name: diabetes-diario-frontend
    restart: unless-stopped
    ports:
      - "${DIARIO_FRONTEND_PORT:-3014}:3000"
    environment:
      # PRIMARY: Dynamic API Gateway URL based on VM_HOST
      - REACT_APP_API_GATEWAY_URL=http://${VM_HOST:-localhost}:${API_GATEWAY_PORT:-8080}
      
      # FALLBACK: Direct service URLs
      - REACT_APP_DIARIO_API_URL=http://${VM_HOST:-localhost}:${DIARIO_SERVICE_PORT:-8005}
      
      # Development configuration
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_ENABLE_DEBUG_LOGGING=true
      
      # Iframe integration
      - REACT_APP_IFRAME_MODE=true
      - REACT_APP_PARENT_ORIGIN=http://${VM_HOST:-localhost}:${TIMELINE_FRONTEND_PORT:-3010}
    depends_on:
      - diario-service
      - api-gateway
    networks:
      - diabetes-network
    volumes:
      - ./frontend/diario-app:/app
      - /app/node_modules    
  # ========================================
  # DEVELOPMENT TOOLS
  # ========================================

  mongo-express:
    image: mongo-express:latest
    container_name: diabetes-mongo-express
    restart: unless-stopped
    ports:
      - "${MONGO_EXPRESS_PORT:-8081}:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-admin123}
      ME_CONFIG_MONGODB_URL: mongodb://${MONGO_INITDB_ROOT_USERNAME:-admin}:${MONGO_INITDB_ROOT_PASSWORD:-admin123}@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb
    networks:
      - diabetes-network

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: diabetes-redis-commander
    restart: unless-stopped
    ports:
      - "${REDIS_COMMANDER_PORT:-8082}:8081"
    environment:
      REDIS_HOSTS: "local:redis:6379:0:${REDIS_PASSWORD:-redis123}"
    depends_on:
      - redis
    networks:
      - diabetes-network

  # ========================================
  # VOICE TRANSCRIPTION SERVICE (NEW)
  # ========================================
  
  voice-transcription-service:
    build:
      context: ./services/voice-transcription-service
      dockerfile: Dockerfile.dev
    container_name: diabetes-voice-transcription
    restart: unless-stopped
    ports:
      - "${VOICE_TRANSCRIPTION_PORT:-5003}:5003"
    environment:
      # Service configuration
      SERVICE_NAME: voice-transcription-service
      SERVICE_VERSION: 1.0.0
      DEBUG: ${DEBUG:-false}
      
      # Vosk model configuration
      VOSK_MODEL_PATH: /app/models/vosk-model-small-it-0.22
      VOSK_MODEL_URL: https://alphacephei.com/vosk/models/vosk-model-small-it-0.22.zip
      
      # Storage paths
      VOICE_STORAGE_PATH: /app/storage/voices
      TRANSCRIPTION_STORAGE_PATH: /app/storage/transcriptions
      
      # Audio configuration
      SAMPLE_RATE: 16000
      CHUNK_SIZE: 4000
      AUDIO_FORMAT: wav
      
      # WebSocket configuration
      WEBSOCKET_TIMEOUT: 300
      MAX_SESSION_DURATION: 1800
      
      # CORS origins
      ALLOWED_ORIGINS: ${ALLOWED_ORIGINS:-http://localhost:3000,http://localhost:8080}
      
      # Environment
      ENV: ${ENV:-development}
    volumes:
      - ./services/voice-transcription-service:/app
      - voice_storage:/app/storage
      - voice_models:/app/models
    networks:
      - diabetes-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5003/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

# ========================================
# NETWORKS & VOLUMES
# ========================================

networks:
  diabetes-network:
    driver: bridge
    name: diabetes-network

volumes:
  mongodb_data:
    driver: local
    name: diabetes-mongodb-data
  redis_data:
    driver: local
    name: diabetes-redis-data
  voice_storage:
    driver: local
    name: diabetes-voice-storage
  voice_models:
    driver: local
    name: diabetes-voice-models